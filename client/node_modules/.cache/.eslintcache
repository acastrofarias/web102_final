[{"C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\index.js":"1","C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\App.js":"2","C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\pages\\ReadPosts.js":"3","C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\pages\\EditPost.js":"4","C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\pages\\CreatePost.js":"5","C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\components\\Card.js":"6","C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\client.js":"7","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\index.js":"8","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\App.js":"9","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\client.js":"10","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\pages\\ReadPosts.js":"11","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\pages\\CreatePost.js":"12","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\pages\\EditPost.js":"13","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\components\\Card.js":"14","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\components\\Posted.jsx":"15","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\pages\\DetailView.jsx":"16"},{"size":361,"mtime":1680655591065,"results":"17","hashOfConfig":"18"},{"size":1316,"mtime":1681170772279,"results":"19","hashOfConfig":"18"},{"size":648,"mtime":1680655591069,"results":"20","hashOfConfig":"18"},{"size":2063,"mtime":1681253293069,"results":"21","hashOfConfig":"18"},{"size":1725,"mtime":1681171408526,"results":"22","hashOfConfig":"18"},{"size":772,"mtime":1680655591063,"results":"23","hashOfConfig":"18"},{"size":395,"mtime":1681109735541,"results":"24","hashOfConfig":"18"},{"size":493,"mtime":1682224304631,"results":"25","hashOfConfig":"26"},{"size":2167,"mtime":1682403305275,"results":"27","hashOfConfig":"26"},{"size":395,"mtime":1681679366346,"results":"28","hashOfConfig":"26"},{"size":1568,"mtime":1682403452922,"results":"29","hashOfConfig":"26"},{"size":1574,"mtime":1682399934503,"results":"30","hashOfConfig":"26"},{"size":1848,"mtime":1682400006885,"results":"31","hashOfConfig":"26"},{"size":590,"mtime":1682397473822,"results":"32","hashOfConfig":"26"},{"size":266,"mtime":1682224912870,"results":"33","hashOfConfig":"26"},{"size":1253,"mtime":1682397585444,"results":"34","hashOfConfig":"26"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o78xpp",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"2ex8vq",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\index.js",[],[],"C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\App.js",[],[],"C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\pages\\ReadPosts.js",[],[],"C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\pages\\EditPost.js",["88"],[],"C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\pages\\CreatePost.js",[],[],"C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\components\\Card.js",[],[],"C:\\Users\\Adrian\\Documents\\web102\\unit_7\\web102_lab7\\client\\src\\client.js",[],[],"C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\index.js",[],[],[],"C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\App.js",["89","90"],[],"import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRoutes } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport { supabase } from './client.js'\r\nimport ReadPosts from './pages/ReadPosts'\r\nimport CreatePost from './pages/CreatePost'\r\nimport EditPost from './pages/EditPost'\r\nimport DetailView from './pages/DetailView'\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [])\r\n\r\n  const fetchPosts = async () => {\r\n    const {data} = await supabase\r\n    .from('hub')\r\n    .select()\r\n    // set state of posts\r\n    setPosts(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    searchPosts(searchInput).catch(console.error);\r\n  }, [searchInput]);\r\n\r\n  const searchPosts = async (searchInput) => {\r\n      if (searchInput !== \"\"){\r\n          const { data, error } = await supabase\r\n              .from(\"hub\")\r\n              .select()\r\n              .textSearch('title', searchInput)\r\n              .order(\"created_at\", { ascending: true });\r\n              setPosts(data);\r\n      }\r\n      else{\r\n          fetchPosts();\r\n      }\r\n  }\r\n\r\n  // Sets up routes\r\n  let element = useRoutes([\r\n    {\r\n      path: \"/\",\r\n      element:<ReadPosts data={posts}/>\r\n    },\r\n    {\r\n      path:\"/:id/edit\",\r\n      element: <EditPost data={posts} />\r\n    },\r\n    {\r\n      path:\"/new\",\r\n      element: <CreatePost />\r\n    },\r\n    {\r\n      path:\"/:id\",\r\n      element: <DetailView data={posts}/>\r\n    }\r\n  ]);\r\n\r\n  return ( \r\n\r\n    <div className=\"App\">\r\n\r\n      <div className=\"header\">\r\n        <h2>TTRPG Hub</h2>\r\n\r\n        <div className='searchBar'> \r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            onChange={(inputString) => setSearchInput(inputString.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <Link to=\"/\"><button className=\"headerBtn\"> Home </button></Link>\r\n          <Link to=\"/new\"><button className=\"headerBtn\"> Post </button></Link>\r\n        </div>\r\n        \r\n      </div>\r\n        {element}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\client.js",[],[],"C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\pages\\ReadPosts.js",[],[],"C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\pages\\CreatePost.js",[],[],"C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\pages\\EditPost.js",["91"],[],"import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './EditPost.css'\r\nimport { supabase } from '../client'\r\n\r\nconst EditPost = ({data}) => {\r\n    const {id} = useParams();    \r\n    const [post, setPost] = useState(data.filter(item => item.id == id)[0]);\r\n\r\n    const handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n        console.log(\"Name: \", name, \" value: \", value);\r\n        setPost( (prev) => {\r\n            return {\r\n                ...prev,\r\n                [name]:value,\r\n            }\r\n        })\r\n    }\r\n    \r\n    const updatePost = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        await supabase\r\n        .from('hub')\r\n        .update({ title: post.title, content: post.content, image_url: post.image_url,})\r\n        .eq('id', id);\r\n        \r\n        window.location = \"/\";\r\n    }\r\n\r\n    const deletePost = async (event) => {\r\n        event.preventDefault();\r\n    \r\n        await supabase\r\n        .from('hub')\r\n        .delete()\r\n        .eq('id', id); \r\n    \r\n        window.location = \"http://localhost:3000/\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input type=\"text\" placeholder=\"Title\" id=\"title\" name=\"title\" onChange={handleChange} /><br />\r\n                <br/>\r\n\r\n                <input type=\"text\" placeholder=\"Content\" id=\"content\" name=\"content\" onChange={handleChange}/><br />\r\n                <br/>\r\n\r\n                <input type=\"text\" placeholder=\"Image URL\" id=\"image_url\" name=\"image_url\" onChange={handleChange}/><br />\r\n                <br/>\r\n\r\n                <input type=\"submit\" value=\"Edit Post\" onClick={updatePost}/>\r\n                <button className=\"deleteButton\" onClick={deletePost}>Delete Post</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default EditPost","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\components\\Card.js",["92","93","94"],[],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport './Card.css'\r\nimport more from './more.png'\r\nimport { Link } from 'react-router-dom'\r\nimport Posted from './Posted';\r\nimport DetailView from '../pages/DetailView';\r\n\r\nconst Card = (props) =>  {\r\n\r\n  return (\r\n      <div className=\"Card\">\r\n          <Posted created_at={props.created_at} />\r\n          <Link to={'/' + props.id} key={props.id} id={props.id}> \r\n            <h2 className=\"title\">{props.title}</h2> \r\n          </Link>\r\n          <p>Upvotes: {props.upvotes}</p>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Card;","C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\components\\Posted.jsx",[],[],"C:\\Users\\Adrian\\Documents\\web102\\web102_final\\client\\src\\pages\\DetailView.jsx",["95","96","97","98","99"],[],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { supabase } from '../client.js'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Link } from 'react-router-dom'\r\nimport Posted from '../components/Posted.jsx'\r\nimport more from '../components/more.png'\r\nimport './DetailView.css'\r\n\r\nconst DetailView = ({data}) => {\r\n  const {id} = useParams();    \r\n  const [post, setPost] = useState(data.filter(item => item.id == id)[0]);\r\n\r\n  const [count, setCount] = useState(post.upvotes)\r\n\r\n  const updateCount = async (event) => {\r\n    await supabase\r\n    .from('hub')\r\n    .update({ upvotes: count + 1})\r\n    .eq('id', id)\r\n\r\n    // Update State Variable\r\n    setCount((count) => count + 1);\r\n  }\r\n\r\n\r\n\r\n  return(\r\n    <div className='DetailView'>\r\n        <Posted created_at={post.created_at} />\r\n        <Link to={'/'+ id + '/edit'}><img className=\"moreButton\" alt=\"edit button\" src={more} /></Link>\r\n\r\n        <h2 className=\"title\">{post.title}</h2> \r\n\r\n        <p className=\"content\">{post.content}</p>\r\n        <img className=\"image_url\" src={post.image_url} />\r\n        <br></br>\r\n\r\n        <button className=\"betButton\" onClick={updateCount} >👍 Upvote: {count}</button>\r\n    </div>\r\n  ); \r\n};\r\n\r\nexport default DetailView;",{"ruleId":"100","severity":1,"message":"101","line":8,"column":66,"nodeType":"102","messageId":"103","endLine":8,"endColumn":68},{"ruleId":"104","severity":1,"message":"105","line":31,"column":6,"nodeType":"106","endLine":31,"endColumn":19,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":35,"column":25,"nodeType":"110","messageId":"111","endLine":35,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":8,"column":66,"nodeType":"102","messageId":"103","endLine":8,"endColumn":68},{"ruleId":"108","severity":1,"message":"112","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":18},{"ruleId":"108","severity":1,"message":"113","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":12},{"ruleId":"108","severity":1,"message":"114","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":18},{"ruleId":"108","severity":1,"message":"115","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"116","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":37},{"ruleId":"108","severity":1,"message":"117","line":11,"column":16,"nodeType":"110","messageId":"111","endLine":11,"endColumn":23},{"ruleId":"100","severity":1,"message":"101","line":11,"column":64,"nodeType":"102","messageId":"103","endLine":11,"endColumn":66},{"ruleId":"118","severity":1,"message":"119","line":35,"column":9,"nodeType":"120","endLine":35,"endColumn":59},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchPosts'. Either include it or remove the dependency array.","ArrayExpression",["121"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'more' is defined but never used.","'DetailView' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'setPost' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"122","fix":"123"},"Update the dependencies array to be: [searchInput, searchPosts]",{"range":"124","text":"125"},[791,804],"[searchInput, searchPosts]"]