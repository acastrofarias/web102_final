{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Documents\\\\web102\\\\web102_final\\\\client\\\\src\\\\pages\\\\ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../client.js';\nimport Card from '../components/Card';\nimport './ReadPosts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = props => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  useEffect(() => {\n    setPosts(props.data);\n  }, [props]);\n  useEffect(() => {\n    searchPosts(searchInput).catch(console.error);\n  }, [searchInput]);\n\n  const searchPosts = async searchInput => {\n    if (searchInput !== \"\") {\n      const {\n        data,\n        error\n      } = await supabase.from(\"hub\").select().textSearch('title', searchInput).order(\"created_at\", {\n        ascending: true\n      });\n      setPosts(data);\n    } else {\n      setPosts(props.data);\n    }\n  };\n\n  const newestPosts = async () => {\n    const {\n      data\n    } = await supabase.from('hub').select().order('created_at', {\n      ascending: true\n    }); // set state of posts\n\n    setPosts(data);\n  };\n\n  const upvotePosts = async () => {\n    const {\n      data\n    } = await supabase.from('hub').select().order('upvotes', {\n      ascending: false\n    }); // set state of posts\n\n    setPosts(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          onChange: inputString => setSearchInput(inputString.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order by: \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"headerBtn\",\n            onClick: upvotePosts,\n            children: \" Most Popular \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"headerBtn\",\n            onClick: newestPosts,\n            children: \" Newest \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), posts && posts.length > 0 ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(Card, {\n      id: post.id,\n      created_at: post.created_at,\n      title: post.title,\n      content: post.content,\n      image_url: post.image_url,\n      upvotes: post.upvotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: 'No Posts Yet ðŸ˜ž'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"VtQXQNwPcvV6niv99AiarbjeeDs=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Card","ReadPosts","props","posts","setPosts","searchInput","setSearchInput","data","searchPosts","catch","console","error","from","select","textSearch","order","ascending","newestPosts","upvotePosts","inputString","target","value","length","map","post","index","id","created_at","title","content","image_url","upvotes"],"sources":["C:/Users/Adrian/Documents/web102/web102_final/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../client.js';\r\nimport Card from '../components/Card';\r\nimport './ReadPosts.css';\r\n\r\n\r\nconst ReadPosts = (props) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setPosts(props.data);\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        searchPosts(searchInput).catch(console.error);\r\n      }, [searchInput]);\r\n\r\n    const searchPosts = async (searchInput) => {\r\n        if (searchInput !== \"\"){\r\n            const { data, error } = await supabase\r\n                .from(\"hub\")\r\n                .select()\r\n                .textSearch('title', searchInput)\r\n                .order(\"created_at\", { ascending: true });\r\n                setPosts(data);\r\n        }\r\n        else{\r\n            setPosts(props.data);\r\n        }\r\n    }\r\n\r\n    const newestPosts = async () => {\r\n        const {data} = await supabase\r\n        .from('hub')\r\n        .select()\r\n        .order('created_at', { ascending: true })\r\n        // set state of posts\r\n        setPosts(data);\r\n      }\r\n    \r\n      const upvotePosts = async () => {\r\n        const {data} = await supabase\r\n        .from('hub')\r\n        .select()\r\n        .order('upvotes', { ascending: false })\r\n        // set state of posts\r\n        setPosts(data);\r\n      }\r\n\r\n    return (\r\n        <div className=\"ReadPosts\">\r\n            <div className='header2'>\r\n                <div className='searchBar'> \r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Search...\"\r\n                      onChange={(inputString) => setSearchInput(inputString.target.value)}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                  <p>\r\n                    Order by: &nbsp;\r\n                    <button className=\"headerBtn\" onClick={upvotePosts}> Most Popular </button>\r\n                    <button className=\"headerBtn\" onClick={newestPosts}> Newest </button>\r\n                  </p>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n            {\r\n                posts && posts.length > 0 ?\r\n                posts.map((post,index) => \r\n                   <Card id={post.id} created_at={post.created_at} title={post.title} content={post.content} image_url={post.image_url} upvotes={post.upvotes}/>\r\n                ) : <h2>{'No Posts Yet ðŸ˜ž'}</h2>\r\n            }\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default ReadPosts;"],"mappings":"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"},"metadata":{},"sourceType":"module"}